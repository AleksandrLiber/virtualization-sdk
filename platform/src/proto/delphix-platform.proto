/*
 * Copyright (c) 2018, 2019 by Delphix. All rights reserved.
 */

syntax = "proto3";

import "common.proto";

option java_multiple_files = true;

package com.delphix.virtualization.platform;

/* DISCOVERY */

message RepositoryDiscoveryRequest {
  com.delphix.virtualization.common.RemoteConnection source_connection = 1;
}

message RepositoryDiscoveryResponse {
  repeated com.delphix.virtualization.common.PluginDefinedObject repositories = 1;
}

message SourceConfigDiscoveryRequest {
  com.delphix.virtualization.common.RemoteConnection source_connection = 1;
  com.delphix.virtualization.common.Repository repository = 2;
}

message SourceConfigDiscoveryResponse {
  repeated com.delphix.virtualization.common.PluginDefinedObject source_configs = 1;
}

/* DIRECT LINKING */

message DirectPreSnapshotRequest {
  com.delphix.virtualization.common.DirectSource direct_source = 1;
  com.delphix.virtualization.common.Repository repository = 2;
  com.delphix.virtualization.common.SourceConfig source_config = 3;
}

message DirectPostSnapshotRequest {
  com.delphix.virtualization.common.DirectSource direct_source = 1;
  com.delphix.virtualization.common.Repository repository = 2;
  com.delphix.virtualization.common.SourceConfig source_config = 3;
}

/* STAGED LINKING */

message StagedPreSnapshotRequest {
  com.delphix.virtualization.common.Repository repository = 1;
  com.delphix.virtualization.common.SourceConfig source_config = 2;
  com.delphix.virtualization.common.StagedSource staged_source = 3;
  com.delphix.virtualization.common.RemoteConnection source_connection = 4;
}

message StagedPostSnapshotRequest {
  com.delphix.virtualization.common.Repository repository = 1;
  com.delphix.virtualization.common.SourceConfig source_config = 2;
  com.delphix.virtualization.common.StagedSource staged_source = 3;
  com.delphix.virtualization.common.RemoteConnection source_connection = 4;
}

message StagedResyncRequest {
  com.delphix.virtualization.common.Repository repository = 1;
  com.delphix.virtualization.common.SourceConfig source_config = 2;
  com.delphix.virtualization.common.StagedSource staged_source = 3;
  com.delphix.virtualization.common.RemoteConnection source_connection = 4;
}

message StartStagingRequest {
  com.delphix.virtualization.common.Repository repository = 1;
  com.delphix.virtualization.common.SourceConfig source_config = 2;
  com.delphix.virtualization.common.StagedSource staged_source = 3;
  com.delphix.virtualization.common.RemoteConnection source_connection = 4;
}

message StopStagingRequest {
  com.delphix.virtualization.common.Repository repository = 1;
  com.delphix.virtualization.common.SourceConfig source_config = 2;
  com.delphix.virtualization.common.StagedSource staged_source = 3;
  com.delphix.virtualization.common.RemoteConnection source_connection = 4;
}

message StagedStatusRequest {
  com.delphix.virtualization.common.Repository repository = 1;
  com.delphix.virtualization.common.SourceConfig source_config = 2;
  com.delphix.virtualization.common.StagedSource staged_source = 3;
  com.delphix.virtualization.common.RemoteConnection source_connection = 4;
}

message StagedStatusResponse {
  enum Status {
    ACTIVE = 0;
    INACTIVE = 1;
  }
  Status status = 1;
}

message StagedWorkerRequest {
  com.delphix.virtualization.common.Repository repository = 1;
  com.delphix.virtualization.common.SourceConfig source_config = 2;
  com.delphix.virtualization.common.StagedSource staged_source = 3;
  com.delphix.virtualization.common.RemoteConnection source_connection = 4;
}

message StagedMountSpecRequest {
  com.delphix.virtualization.common.Repository repository = 1;
  com.delphix.virtualization.common.StagedSource staged_source = 2;
  com.delphix.virtualization.common.RemoteConnection source_connection = 4;
}

message StagedMountSpecResponse {
  string mountPath = 1;
  com.delphix.virtualization.common.OwnershipSpec ownership_spec = 2;
}

/* PROVISIONING */

message ConfigureRequest {
  com.delphix.virtualization.common.Repository repository = 1;
  com.delphix.virtualization.common.Snapshot snapshot = 2;
  com.delphix.virtualization.common.VirtualSource source = 3;
}

message ConfigureResponse {
  com.delphix.virtualization.common.PluginDefinedObject source_config = 1;
}

message UnconfigureRequest {
  com.delphix.virtualization.common.Repository repository = 1;
  com.delphix.virtualization.common.SourceConfig source_config = 2;
  com.delphix.virtualization.common.VirtualSource virtual_source = 3;
  bool deleteFlag = 4;
}

message ReconfigureRequest {
  com.delphix.virtualization.common.Snapshot snapshot = 1;
  com.delphix.virtualization.common.SourceConfig source_config = 2;
  com.delphix.virtualization.common.VirtualSource virtual_source = 3;
}

message ReconfigureResponse {
  com.delphix.virtualization.common.PluginDefinedObject source_config = 1;
}

message StartRequest {
  com.delphix.virtualization.common.Repository repository = 1;
  com.delphix.virtualization.common.SourceConfig source_config = 2;
  com.delphix.virtualization.common.VirtualSource virtual_source = 3;
}

message StopRequest {
  com.delphix.virtualization.common.Repository repository = 1;
  com.delphix.virtualization.common.SourceConfig source_config = 2;
  com.delphix.virtualization.common.VirtualSource virtual_source = 3;
}

message VirtualPreSnapshotRequest {
  com.delphix.virtualization.common.Repository repository = 1;
  com.delphix.virtualization.common.SourceConfig source_config = 2;
  com.delphix.virtualization.common.VirtualSource virtual_source = 3;
}

message VirtualPostSnapshotRequest {
  com.delphix.virtualization.common.Repository repository = 1;
  com.delphix.virtualization.common.SourceConfig source_config = 2;
  com.delphix.virtualization.common.VirtualSource virtual_source = 3;
}

message VirtualPostSnapshotResponse {
  com.delphix.virtualization.common.PluginDefinedObject snapshot = 1;
}

message VirtualStatusRequest {
  com.delphix.virtualization.common.Repository repository = 1;
  com.delphix.virtualization.common.SourceConfig source_config = 2;
  com.delphix.virtualization.common.VirtualSource virtual_source = 3;
}

message VirtualStatusResponse {
  enum Status {
    ACTIVE = 0;
    INACTIVE = 1;
  }
  Status status = 1;
}

message InitializeRequest {
  com.delphix.virtualization.common.Repository repository = 1;
  com.delphix.virtualization.common.SourceConfig source_config = 2;
  com.delphix.virtualization.common.VirtualSource virtual_source = 3;
}

message VirtualMountSpecRequest {
  com.delphix.virtualization.common.Repository repository = 1;
  com.delphix.virtualization.common.VirtualSource virtual_source = 2;
}

message VirtualMountSpecResponse {
  com.delphix.virtualization.common.SingleMount primary_mount = 1;
  repeated com.delphix.virtualization.common.SingleMount additional_mounts = 2;
  repeated com.delphix.virtualization.common.OwnershipSpec ownership_specs = 3;
}

/* UPGRADE */

message UpgradeLinkedSourceRequest {
  com.delphix.virtualization.common.LinkedSource linked_source = 1;
}

message UpgradeVirtualSourceRequest {
  com.delphix.virtualization.common.VirtualSource virtual_source = 1;
}

message UpgradeSourceConfigRequest {
  com.delphix.virtualization.common.SourceConfig source_config = 1;
}

message UpgradeSnapshotRequest {
  com.delphix.virtualization.common.Snapshot snapshot = 1;
}
